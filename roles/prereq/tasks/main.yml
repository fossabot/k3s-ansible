---

- name: permit traffic in default zone for kube-apiserver service
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
  with_items:
    - etcd-server
    - etcd-client
    - kube-apiserver

- name: Set SELinux to disabled state
  selinux:
    state: disabled
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Fedora']
  notify: reboot machine

- name: Change the default firewalld backend
  lineinfile:
    path: /etc/firewalld/firewalld.conf
    line: FirewallBackend=iptables
    regexp: FirewallBackend=
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version >= '31'
  notify: restart firewalld

- name: Install grubby
  dnf:
    name: grubby
    state: present
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version >= '31'

- name: Check if systemd.unified_cgroup_hierarchy=0 is set in kernelopts
  command: grep -Eq '^kernelopts=.* systemd\.unified_cgroup_hierarchy=0' /boot/grub2/grubenv
  register: grubenv_has_cgroup_exception
  check_mode: no
  ignore_errors: yes
  changed_when: no
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version >= '31'

- name: Configure systemd.unified_cgroup_hierarchy=0 in kernelopts
  command: grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"
  when:
    - ansible_distribution == "Fedora" and ansible_distribution_major_version >= '31'
    - grubenv_has_cgroup_exception.rc != 0
  notify: reboot machine

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Fedora']

- name: Load br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Fedora']

- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Fedora']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
